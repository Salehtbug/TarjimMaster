@model Tarjim.Models.User
@{
    ViewData["Title"] = "تفاصيل المستخدم";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="col-lg-3">
        <div class="card shadow-sm mb-4">
            <div class="card-body text-center">
                @if (!string.IsNullOrEmpty(Model.AvatarUrl))
                {
                    <img src="@Model.AvatarUrl" class="avatar-lg mb-3 rounded-circle" alt="@Model.Name">
                }
                else
                {
                    <div class="avatar-lg mb-3 rounded-circle bg-primary text-white d-flex align-items-center justify-content-center mx-auto">
                        <span class="fs-1">@Model.Name[0]</span>
                    </div>
                }
                <h5 class="mb-1">@Model.Name</h5>
                <p class="text-muted mb-3">
                    @if (Model.Roles != null)
                    {
                        foreach (var role in Model.Roles)
                        {
                            string roleBadgeClass = role.RoleName switch
                            {
                                "Admin" => "badge bg-danger",
                                "Client" => "badge bg-info",
                                "Translator" => "badge bg-success",
                                _ => "badge bg-secondary"
                            };

                            string roleText = role.RoleName switch
                            {
                                "Admin" => "مشرف",
                                "Client" => "عميل",
                                "Translator" => "مترجم",
                                _ => role.RoleName
                            };

                            <span class="@roleBadgeClass me-1">@roleText</span>
                        }
                    }
                </p>
                <div class="mb-3">
                    @if (Model.IsActive == true)
                    {
                        <span class="badge bg-success">نشط</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">معطل</span>
                    }

                    @if (Model.IsVerified == true)
                    {
                        <span class="badge bg-info ms-1">موثق</span>
                    }
                </div>
                <button class="btn btn-sm @(Model.IsActive == true ? "btn-danger" : "btn-success")" 
                        data-bs-toggle="modal" 
                        data-bs-target="#toggleStatusModal">
                    @if (Model.IsActive == true)
                    {
                        <i class="fas fa-ban me-1"></i> <span>تعطيل الحساب</span>
                    }
                    else
                    {
                        <i class="fas fa-check-circle me-1"></i> <span>تفعيل الحساب</span>
                    }
                </button>
            </div>
            <div class="list-group list-group-flush">
                <div class="list-group-item d-flex justify-content-between">
                    <span>البريد الإلكتروني</span>
                    <span class="text-primary">@Model.Email</span>
                </div>
                @if (!string.IsNullOrEmpty(Model.Location))
                {
                    <div class="list-group-item d-flex justify-content-between">
                        <span>الموقع</span>
                        <span>@Model.Location</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.Phone))
                {
                    <div class="list-group-item d-flex justify-content-between">
                        <span>الهاتف</span>
                        <span dir="ltr">@Model.Phone</span>
                    </div>
                }
                <div class="list-group-item d-flex justify-content-between">
                    <span>تاريخ التسجيل</span>
                    <span>@Model.CreatedAt?.ToString("yyyy/MM/dd")</span>
                </div>
                <div class="list-group-item d-flex justify-content-between">
                    <span>آخر تسجيل دخول</span>
                    <span>@(Model.LastLogin?.ToString("yyyy/MM/dd HH:mm") ?? "لم يسجل الدخول بعد")</span>
                </div>
            </div>
        </div>

        @if (Model.Roles != null && Model.Roles.Any(r => r.RoleName == "Translator"))
        {
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h6 class="card-title mb-0">إحصائيات المترجم</h6>
                </div>
                <div class="list-group list-group-flush">
                    <div class="list-group-item d-flex justify-content-between">
                        <span>التقييم</span>
                        <div class="rating-stars">
                            @if (Model.Rating.HasValue)
                            {
                                var rating = Convert.ToDouble(Model.Rating.Value);
                                for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= rating)
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                    }
                                    else if (i - 0.5 <= rating)
                                    {
                                        <i class="fas fa-star-half-alt text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-star text-warning"></i>
                                    }
                                }
                                <span class="ms-1">(@Model.Rating.Value.ToString("0.0"))</span>
                            }

                            else
                            {
                                <span>-</span>
                            }
                        </div>
                    </div>
                    <div class="list-group-item d-flex justify-content-between">
                        <span>المشاريع المكتملة</span>
                        <span class="badge bg-success rounded-pill">@ViewBag.CompletedProjects</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between">
                        <span>إجمالي الدخل</span>
                        <span class="fw-bold">@ViewBag.TotalEarnings?.ToString("0.00") JOD</span>
                    </div>
                </div>
            </div>
        }
        
        @if (Model.Roles != null && Model.Roles.Any(r => r.RoleName == "Client"))
        {
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h6 class="card-title mb-0">إحصائيات العميل</h6>
                </div>
                <div class="list-group list-group-flush">
                    <div class="list-group-item d-flex justify-content-between">
                        <span>إجمالي المشاريع</span>
                        <span class="badge bg-primary rounded-pill">@ViewBag.TotalProjects</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between">
                        <span>المشاريع المكتملة</span>
                        <span class="badge bg-success rounded-pill">@ViewBag.CompletedProjects</span>
                    </div>
                    <div class="list-group-item d-flex justify-content-between">
                        <span>إجمالي الإنفاق</span>
                        <span class="fw-bold">@ViewBag.TotalSpent?.ToString("0.00") JOD</span>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="col-lg-9">
        @if (!string.IsNullOrEmpty(Model.Bio))
        {
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h6 class="card-title mb-0">نبذة</h6>
                </div>
                <div class="card-body">
                    <p class="mb-0">@Model.Bio</p>
                </div>
            </div>
        }

        @if (Model.Roles != null && Model.Roles.Any(r => r.RoleName == "Translator") && ViewBag.Skills != null)
        {
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h6 class="card-title mb-0">المهارات</h6>
                </div>
                <div class="card-body">
                    @if (ViewBag.Skills != null && ((List<Skill>)ViewBag.Skills).Any())
                    {
                        <div class="d-flex flex-wrap">
                            @foreach (var skill in (List<Skill>)ViewBag.Skills)
                            {
                                <span class="badge bg-light text-dark me-2 mb-2 p-2">@skill.SkillName</span>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted mb-0">لم يتم تحديد مهارات.</p>
                    }
                </div>
            </div>
        }

        @if (Model.Roles != null && Model.Roles.Any(r => r.RoleName == "Translator") && ViewBag.CV != null)
        {
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h6 class="card-title mb-0">السيرة الذاتية</h6>
                </div>
                <div class="card-body">
                    @if (ViewBag.CV != null && ((List<TranslatorCv>)ViewBag.CV).Any())
                    {
                        <div class="cv-timeline">
                            @foreach (var cvItem in (List<TranslatorCv>)ViewBag.CV)
                            {
                                <div class="cv-item mb-3">
                                    <h6 class="fw-bold">
                                        @{
                                            string typeIcon = cvItem.Type switch
                                            {
                                                "Education" => "fa-graduation-cap text-info",
                                                "Experience" => "fa-briefcase text-primary",
                                                "Certification" => "fa-certificate text-success",
                                                "SourceLanguages" => "fa-language text-warning",
                                                "TargetLanguages" => "fa-globe text-danger",
                                                "Availability" => "fa-calendar-alt text-secondary",
                                                _ => "fa-file-alt"
                                            };

                                            string typeName = cvItem.Type switch
                                            {
                                                "Education" => "التعليم",
                                                "Experience" => "الخبرة",
                                                "Certification" => "الشهادات",
                                                "SourceLanguages" => "لغات المصدر",
                                                "TargetLanguages" => "لغات الهدف",
                                                "Availability" => "أوقات التفرغ",
                                                _ => cvItem.Type
                                            };
                                        }
                                        <i class="fas @typeIcon me-1"></i> @typeName
                                    </h6>
                                    <div class="mb-1">@cvItem.Value</div>
                                    @if (cvItem.StartDate.HasValue)
                                    {
                                        <div class="text-muted small">
                                            <span>@cvItem.StartDate.Value.ToString("yyyy/MM/dd")</span>
                                            @if (cvItem.EndDate.HasValue)
                                            {
                                                <span> - @cvItem.EndDate.Value.ToString("yyyy/MM/dd")</span>
                                            }
                                            else
                                            {
                                                <span> - حتى الآن</span>
                                            }
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(cvItem.Note))
                                    {
                                        <div class="text-muted fst-italic mt-1">@cvItem.Note</div>
                                    }
                                </div>
                                @if (!cvItem.Equals(((List<TranslatorCv>)ViewBag.CV).Last()))
                                {
                                    <hr />
                                }
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted mb-0">لم يتم إضافة أي معلومات للسيرة الذاتية.</p>
                    }
                </div>
            </div>
        }

        @if (Model.Roles != null && Model.Roles.Any(r => r.RoleName == "Translator") && ViewBag.Reviews != null && ((List<Review>)ViewBag.Reviews).Any())
        {
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                    <h6 class="card-title mb-0">التقييمات</h6>
                    <span class="badge bg-primary rounded-pill">@((List<Review>)ViewBag.Reviews).Count ت<span class="badge bg-primary rounded-pill">@((List<Review>)ViewBag.Reviews).Count تقييم</span>
                </div>
                <div class="card-body">
                    @foreach (var review in (List<Review>)ViewBag.Reviews)
                    {
                        <div class="review-item mb-3">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <div class="d-flex align-items-center">
                                    @if (!string.IsNullOrEmpty(review.Client.AvatarUrl))
                                    {
                                        <img src="@review.Client.AvatarUrl" class="avatar-sm me-2 rounded-circle" alt="@review.Client.Name">
                                    }
                                    else
                                    {
                                        <div class="avatar-sm me-2 rounded-circle bg-primary text-white d-flex align-items-center justify-content-center">
                                            @review.Client.Name[0]
                                        </div>
                                    }
                                    <div>
                                        <div class="fw-bold">@review.Client.Name</div>
                                        <div class="text-muted small">@review.CreatedAt?.ToString("yyyy/MM/dd")</div>
                                    </div>
                                </div>
                                <div class="rating-stars">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= review.Rating)
                                        {
                                            <i class="fas fa-star text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-star text-warning"></i>
                                        }
                                    }
                                </div>
                            </div>
                            <div class="ms-5">
                                <div class="mb-1">
                                    <i class="fas fa-file-alt text-muted me-1"></i>
                                    <a href="@Url.Action("ProjectDetails", "Admin", new { id = review.ProjectId })">@review.Project?.Title</a>
                                </div>
                                @if (!string.IsNullOrEmpty(review.Comment))
                                {
                                    <div class="review-comment p-3 bg-light rounded">@review.Comment</div>
                                }
                            </div>
                        </div>
                        @if (!review.Equals(((List<Review>)ViewBag.Reviews).Last()))
                        {
                            <hr />
                        }
                    }
                </div>
            </div>
        }

        <div class="card shadow-sm">
            <div class="card-header bg-white d-flex justify-content-between align-items-center">
                <h6 class="card-title mb-0">النشاط الحديث</h6>
                @if (ViewBag.RecentActivity != null && ((List<ActivityLog>)ViewBag.RecentActivity).Count > 0)
                {
                    <span class="badge bg-primary rounded-pill">@((List<ActivityLog>)ViewBag.RecentActivity).Count نشاط</span>
                }
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>النشاط</th>
                                <th>الوصف</th>
                                <th>التاريخ والوقت</th>
                                <th>عنوان IP</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.RecentActivity != null && ((List<ActivityLog>)ViewBag.RecentActivity).Count > 0)
                            {
                                @foreach (var activity in (List<ActivityLog>)ViewBag.RecentActivity)
                                {
                                    <tr>
                                        <td>
                                            @{
                                                string activityIcon = activity.ActivityType switch
                                                {
                                                    "Login" => "fa-sign-in-alt text-info",
                                                    "Logout" => "fa-sign-out-alt text-warning",
                                                    "Register" => "fa-user-plus text-success",
                                                    "CreateProject" => "fa-folder-plus text-success",
                                                    "EditProject" => "fa-edit text-primary",
                                                    "DeleteProject" => "fa-trash text-danger",
                                                    "CreateOffer" => "fa-hand-holding-usd text-info",
                                                    "AcceptOffer" => "fa-check-circle text-success",
                                                    "StartWorking" => "fa-play text-primary",
                                                    "CompleteProject" => "fa-check-double text-success",
                                                    _ => "fa-circle-info text-secondary"
                                                };
                                            }
                                            <i class="fas @activityIcon me-1"></i>
                                            @activity.ActivityType
                                        </td>
                                        <td>@activity.Description</td>
                                        <td>@activity.CreatedAt?.ToString("yyyy/MM/dd HH:mm:ss")</td>
                                        <td>@activity.IpAddress</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="text-center py-4">لا توجد أنشطة حديثة لهذا المستخدم</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal تغيير حالة المستخدم -->
<div class="modal fade" id="toggleStatusModal" tabindex="-1" aria-labelledby="toggleStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Admin" asp-action="UpdateUserStatus" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="toggleStatusModalLabel">
                        @if (Model.IsActive == true)
                        {
                            <span>تعطيل حساب المستخدم</span>
                        }
                        else
                        {
                            <span>تفعيل حساب المستخدم</span>
                        }
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="id" value="@Model.UserId">
                    <input type="hidden" name="isActive" value="@(Model.IsActive != true)">
                    @if (Model.IsActive == true)
                    {
                        <p>هل أنت متأكد من رغبتك في تعطيل حساب المستخدم: <strong>@Model.Name</strong>؟</p>
                        <p>هذا سيمنع المستخدم من تسجيل الدخول واستخدام النظام.</p>
                    }
                    else
                    {
                        <p>هل أنت متأكد من رغبتك في تفعيل حساب المستخدم: <strong>@Model.Name</strong>؟</p>
                        <p>هذا سيسمح للمستخدم بتسجيل الدخول واستخدام النظام.</p>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="submit" class="btn @(Model.IsActive == true ? "btn-danger" : "btn-success")">تأكيد</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // يمكن إضافة أي سكريبتات ضرورية هنا
        });
    </script>
}