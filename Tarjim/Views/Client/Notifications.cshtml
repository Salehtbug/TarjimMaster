@model List<Tarjim.Models.Notification>

@{
    ViewData["Title"] = "الإشعارات";
    Layout = "~/Views/Shared/_ClientLayout.cshtml";
}

<style>
    /* ستايل خاص بصفحة الإشعارات */
    .dashboard-title {
        color: var(--gray-800);
        font-size: 1.75rem;
        font-weight: 700;
        margin-bottom: 2rem;
    }

    .notification-actions {
        display: flex;
        justify-content: flex-end;
        margin-bottom: 1.5rem;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: var(--radius);
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 0.95rem;
    }

    .btn-primary {
        background-color: var(--primary);
        color: white;
    }

        .btn-primary:hover {
            background-color: var(--primary-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 201, 141, 0.2);
        }

    .notifications-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .notification-card {
        display: flex;
        align-items: flex-start;
        padding: 1.25rem;
        background-color: white;
        border-radius: var(--radius-lg);
        box-shadow: var(--shadow);
        transition: all 0.2s ease;
        position: relative;
        border-right: 4px solid transparent;
    }

        .notification-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .notification-card.unread {
            border-right-color: var(--primary);
            background-color: var(--primary-light);
        }

    .notification-icon {
        width: 3rem;
        height: 3rem;
        min-width: 3rem;
        background-color: var(--gray-100);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        margin-left: 1rem;
        font-size: 1.25rem;
        color: var(--primary);
    }

    .notification-card.unread .notification-icon {
        background-color: var(--primary-light);
        color: var(--primary);
    }

    .notification-content {
        flex: 1;
    }

    .notification-message {
        color: var(--gray-800);
        font-size: 1rem;
        margin-bottom: 0.5rem;
        line-height: 1.5;
    }

    .notification-date {
        color: var(--gray-500);
        font-size: 0.875rem;
    }

    .notification-link {
        width: 2.5rem;
        height: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: var(--gray-100);
        color: var(--gray-600);
        border-radius: 50%;
        transition: all 0.2s ease;
        margin-right: 1rem;
    }

        .notification-link:hover {
            background-color: var(--primary);
            color: white;
        }

    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
        background-color: white;
        border-radius: var(--radius-lg);
        box-shadow: var(--shadow);
    }

    .empty-icon {
        font-size: 3.5rem;
        color: var(--gray-400);
        margin-bottom: 1.5rem;
    }

    .empty-title {
        color: var(--gray-700);
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .empty-message {
        color: var(--gray-500);
        font-size: 1rem;
        line-height: 1.6;
        max-width: 500px;
        margin: 0 auto;
    }

    /* تخصيص ستايل للهاتف */
    \0040media (max-width: 768px) {
        .notification-card

    {
        flex-direction: column;
        align-items: flex-start;
    }

    .notification-icon {
        margin-left: 0;
        margin-bottom: 1rem;
    }

    .notification-content {
        width: 100%;
        margin-bottom: 1rem;
    }

    .notification-link {
        position: absolute;
        top: 1.25rem;
        left: 1.25rem;
        margin-right: 0;
    }

    .notification-actions {
        justify-content: center;
    }

    .btn {
        width: 100%;
        text-align: center;
    }

    }
</style>

<div class="dashboard-container">
    <!-- السايدبار - نفس الكود الموجود في Index.cshtml -->
    <aside class="filters-sidebar">
        <div class="filter-list">
            <a href="@Url.Action("Index", "Client")" class="filter-button @(ViewBag.ActiveSection == "all" ? "active" : "")" data-section="all">
                <span class="filter-text">الكل</span>
                <div class="filter-icon">
                    <i class="fas fa-border-all"></i>
                </div>
            </a>

            <a href="@Url.Action("InProgress", "Client")" class="filter-button @(ViewBag.ActiveSection == "in-progress" ? "active" : "")" data-section="in-progress">
                <span class="filter-text">قيد التنفيذ</span>
                <div class="filter-icon">
                    <i class="fas fa-clock"></i>
                </div>
            </a>

            <a href="@Url.Action("Completed", "Client")" class="filter-button @(ViewBag.ActiveSection == "completed" ? "active" : "")" data-section="completed">
                <span class="filter-text">مكتمل</span>
                <div class="filter-icon">
                    <i class="fas fa-check"></i>
                </div>
            </a>

            <a href="@Url.Action("NotAccepted", "Client")" class="filter-button @(ViewBag.ActiveSection == "not-accepted" ? "active" : "")" data-section="not-accepted">
                <span class="filter-text">لم يقبل بعد</span>
                <div class="filter-icon">
                    <i class="fas fa-hourglass-start"></i>
                </div>
            </a>

            <a href="@Url.Action("Messages", "Client")" class="filter-button @(ViewBag.ActiveSection == "messages" ? "active" : "")" data-section="messages">
                <span class="filter-text">الرسائل</span>
                <div class="filter-icon">
                    <i class="far fa-comment-alt"></i>
                </div>
            </a>

            <a href="@Url.Action("RequestTranslator", "Client")" class="filter-button @(ViewBag.ActiveSection == "request-translator" ? "active" : "")" data-section="request-translator">
                <span class="filter-text">طلب مترجم فوري</span>
                <div class="filter-icon">
                    <i class="fas fa-user-tie"></i>
                </div>
            </a>

            <a href="@Url.Action("Notifications", "Client")" class="filter-button @(ViewBag.ActiveSection == "notifications" ? "active" : "")" data-section="notifications">
                <span class="filter-text">الإشعارات</span>
                <div class="filter-icon">
                    <i class="far fa-bell"></i>
                </div>
            </a>

            <a href="@Url.Action("Settings", "Client")" class="filter-button @(ViewBag.ActiveSection == "settings" ? "active" : "")" data-section="settings">
                <span class="filter-text">الإعدادات</span>
                <div class="filter-icon">
                    <i class="fas fa-cog"></i>
                </div>
            </a>

            <button class="filter-button" id="logoutBtn" data-section="logout">
                <span class="filter-text">تسجيل الخروج</span>
                <div class="filter-icon">
                    <i class="fas fa-sign-out-alt"></i>
                </div>
            </button>
        </div>

        <a href="@Url.Action("Step1", "ProjectCreation")" class="btn btn-primary">
            <i class="fas fa-plus"></i> نشر وظيفة جديدة
        </a>
    </aside>


    <!-- المحتوى الرئيسي -->
    <main class="main-content">
        <h1 class="dashboard-title">الإشعارات</h1>

        <div class="notification-actions">
            <button id="markAllRead" class="btn btn-primary">تعليم الكل كمقروء</button>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="notifications-container">
                @foreach (var notification in Model)
                {
                    <div class="notification-card @(notification.IsRead == false ? "unread" : "")">
                        <div class="notification-icon">
                            @switch (notification.Type)
                            {
                                case "offer_received":
                                    <i class="fas fa-clipboard-check"></i>
                                    break;
                                case "offer_accepted":
                                    <i class="fas fa-check-circle"></i>
                                    break;
                                case "offer_rejected":
                                    <i class="fas fa-times-circle"></i>
                                    break;
                                case "project_completed":
                                    <i class="fas fa-trophy"></i>
                                    break;
                                case "review_received":
                                    <i class="fas fa-star"></i>
                                    break;
                                case "payment_received":
                                    <i class="fas fa-money-bill-wave"></i>
                                    break;
                                default:
                                    <i class="fas fa-bell"></i>
                                    break;
                            }
                        </div>
                        <div class="notification-content">
                            <div class="notification-message">@notification.Message</div>
                            <div class="notification-date">
                                @notification.CreatedAt?.ToString("yyyy/MM/dd HH:mm")
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(notification.LinkUrl))
                        {
                            <a href="@notification.LinkUrl" class="notification-link">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        }
                        else if (notification.RelatedId.HasValue && !string.IsNullOrEmpty(notification.RelatedType))
                        {
                            @if (notification.RelatedType.ToLower() == "project")
                            {
                                <a href="@Url.Action("Details", "Project", new { id = notification.RelatedId })" class="notification-link">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            }
                            else if (notification.RelatedType.ToLower() == "offer")
                            {
                                <a href="@Url.Action("ProjectOffers", "Client", new { projectId = notification.RelatedId })" class="notification-link">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            }
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-bell-slash"></i>
                </div>
                <h3 class="empty-title">لا توجد إشعارات</h3>
                <p class="empty-message">
                    ليس لديك أي إشعارات جديدة في الوقت الحالي.
                </p>
            </div>
        }
    </main>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // زر تسجيل الخروج
            $("#logoutBtn").click(function() {
                Swal.fire({
                    title: 'تسجيل الخروج',
                    text: 'هل أنت متأكد من رغبتك في تسجيل الخروج؟',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'نعم',
                    cancelButtonText: 'لا',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '@Url.Action("Logout", "Auth")';
                    }
                });
            });

            // تعليم جميع الإشعارات كمقروءة
            $("#markAllRead").click(function() {
                $.ajax({
                    url: '@Url.Action("MarkAllNotificationsAsRead", "Client")',
                    type: 'POST',
                    success: function(response) {
                        if (response.success) {
                            $(".notification-card.unread").removeClass("unread");
                            Swal.fire({
                                title: 'تم!',
                                text: 'تم تعليم جميع الإشعارات كمقروءة',
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else {
                            Swal.fire(
                                'خطأ!',
                                response.message || 'حدث خطأ أثناء تحديث الإشعارات',
                                'error'
                            );
                        }
                    },
                    error: function() {
                        Swal.fire(
                            'خطأ!',
                            'حدث خطأ في الاتصال بالخادم',
                            'error'
                        );
                    }
                });
            });
        });
    </script>
}