// Wait for document to be fully loaded
document.addEventListener('DOMContentLoaded', function () {
    // Initialize AOS (Animate on Scroll)
    if (typeof AOS !== 'undefined') {
        AOS.init({
            once: true,
            duration: 800,
            offset: 50,
            delay: 100,
            easing: 'ease-in-out'
        });
    }

    // Initialize fixed header behavior
    initializeFixedHeader();

    // Initialize mobile navigation menu toggle
    initializeMobileMenu();

    // Initialize FAQ accordion
    initializeFAQ();

    // Initialize counter animation
    initializeCounters();

    // Initialize timeline
    initializeTimeline();

    // Initialize Swiper for testimonials
    initializeTestimonialSwiper();

    // Initialize smooth scrolling for anchor links
    initializeSmoothScroll();

    // Add fade-in animations to elements with proper classes
    initializeFadeInElements();
});

// Fixed header that changes on scroll
function initializeFixedHeader() {
    const header = document.querySelector('header');
    if (!header) return;

    function updateHeaderOnScroll() {
        if (window.scrollY > 10) {
            header.classList.add('bg-white', 'shadow-md', 'py-2');
            header.classList.remove('bg-transparent', 'py-4');
        } else {
            header.classList.remove('bg-white', 'shadow-md', 'py-2');
            header.classList.add('bg-transparent', 'py-4');
        }
    }

    window.addEventListener('scroll', updateHeaderOnScroll);
    // Initial call to set correct state on page load
    updateHeaderOnScroll();
}

// Mobile menu toggle functionality
function initializeMobileMenu() {
    const menuButton = document.querySelector('[aria-expanded]');
    const mobileMenu = document.querySelector('.md\\:hidden');

    if (!menuButton || !mobileMenu) return;

    menuButton.addEventListener('click', function () {
        const expanded = this.getAttribute('aria-expanded') === 'true' || false;
        this.setAttribute('aria-expanded', !expanded);
        mobileMenu.classList.toggle('hidden');
    });
}

// FAQ accordion functionality
function initializeFAQ() {
    const faqButtons = document.querySelectorAll('.faq-toggle');
    const allContents = document.querySelectorAll('.faq-content');
    const allIcons = document.querySelectorAll('.rotate-icon');

    if (!faqButtons.length) return;

    faqButtons.forEach((btn, index) => {
        btn.addEventListener('click', () => {
            const content = btn.nextElementSibling;
            const icon = btn.querySelector('.rotate-icon');

            // Close all other FAQs
            allContents.forEach((el, i) => {
                if (el !== content) {
                    el.classList.remove('max-h-96', 'opacity-100');
                    el.classList.add('max-h-0', 'opacity-0');
                    if (allIcons[i]) allIcons[i].classList.remove('rotate-180');
                }
            });

            // Toggle current FAQ
            const isOpen = content.classList.contains('opacity-100');
            content.classList.toggle('max-h-96', !isOpen);
            content.classList.toggle('opacity-100', !isOpen);
            content.classList.toggle('max-h-0', isOpen);
            content.classList.toggle('opacity-0', isOpen);
            icon.classList.toggle('rotate-180', !isOpen);
        });
    });

    // FAQ search functionality
    const searchInput = document.getElementById('faqSearchInput');
    const faqItems = document.querySelectorAll('#faqList > div');

    if (searchInput && faqItems.length) {
        searchInput.addEventListener('input', function () {
            const searchText = this.value.toLowerCase();

            faqItems.forEach(item => {
                const question = item.querySelector('button span').textContent.toLowerCase();
                const match = question.includes(searchText);
                item.style.display = match ? 'block' : 'none';
            });
        });
    }
}

// Animate counter numbers
function initializeCounters() {
    const counterElements = document.querySelectorAll('.counter');

    if (!counterElements.length) return;

    const observerOptions = {
        threshold: 0.5,
        rootMargin: '0px'
    };

    const counterObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const counter = entry.target;
                const target = parseInt(counter.dataset.target);
                const suffix = counter.dataset.suffix || '';

                animateCounter(counter, target, suffix);
                counterObserver.unobserve(counter);
            }
        });
    }, observerOptions);

    counterElements.forEach(counter => {
        counterObserver.observe(counter);
    });
}

function animateCounter(counter, target, suffix) {
    let start = 0;
    const duration = 2000; // 2 seconds
    const startTime = performance.now();

    function updateCounter(currentTime) {
        const elapsedTime = currentTime - startTime;
        const progress = Math.min(elapsedTime / duration, 1);

        // Easing function for smoother counting
        const easedProgress = 1 - Math.pow(1 - progress, 3);

        const currentCount = Math.floor(easedProgress * target);
        counter.textContent = currentCount + suffix;

        if (progress < 1) {
            requestAnimationFrame(updateCounter);
        } else {
            counter.textContent = target + suffix;
        }
    }

    requestAnimationFrame(updateCounter);
}

// Timeline animation 
function initializeTimeline() {
    const items = document.querySelectorAll('[data-timeline-item]');
    const progress = document.querySelector('.list-progress .inner');

    if (!items.length) return;

    function updateTimeline() {
        const scrollTop = window.scrollY + window.innerHeight / 2;

        items.forEach((item, index) => {
            if (item.offsetTop < scrollTop) {
                item.classList.add('active');
                if (progress) {
                    progress.style.height = `${(index + 1) * 100}%`;
                }
            }
        });
    }

    window.addEventListener('scroll', updateTimeline);
    // Initial call
    setTimeout(updateTimeline, 200);
}

// Initialize Swiper for testimonials
function initializeTestimonialSwiper() {
    if (typeof Swiper === 'undefined') return;

    // Testimonials slider
    const testimonialsSwiper = document.querySelector('.testimonials-swiper');
    if (testimonialsSwiper) {
        new Swiper(testimonialsSwiper, {
            slidesPerView: 1,
            spaceBetween: 30,
            loop: true,
            rtl: true,
            autoplay: {
                delay: 6000,
                disableOnInteraction: false,
            },
            navigation: {
                nextEl: ".swiper-button-next-custom",
                prevEl: ".swiper-button-prev-custom",
            },
            pagination: {
                el: ".swiper-pagination",
                clickable: true,
            }
        });
    }

    // Partners/Logos slider (if exists)
    const logoSlider = document.querySelector('.partners-slider');
    if (logoSlider) {
        new Swiper(logoSlider, {
            slidesPerView: 2,
            spaceBetween: 20,
            loop: true,
            autoplay: {
                delay: 3000,
                disableOnInteraction: false
            },
            breakpoints: {
                640: { slidesPerView: 3 },
                768: { slidesPerView: 4 },
                1024: { slidesPerView: 5 }
            }
        });
    }
}

// Smooth scrolling for anchor links
function initializeSmoothScroll() {
    document.querySelectorAll('a[href^="#"]:not([href="#"])').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();

            const targetId = this.getAttribute('href');
            const targetElement = document.querySelector(targetId);

            if (targetElement) {
                const headerOffset = 100; // Adjust based on your header height
                const elementPosition = targetElement.getBoundingClientRect().top;
                const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

                window.scrollTo({
                    top: offsetPosition,
                    behavior: 'smooth'
                });
            }
        });
    });
}

// Initialize fade-in animations on scroll
function initializeFadeInElements() {
    const fadeElements = document.querySelectorAll('.fade-in-once, .fade-in');

    if (!fadeElements.length) return;

    const fadeObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('opacity-100', 'translate-y-0');
                entry.target.classList.remove('opacity-0', 'translate-y-10');

                // For "once" animations, unobserve after animation
                if (entry.target.classList.contains('fade-in-once')) {
                    fadeObserver.unobserve(entry.target);
                }
            } else if (entry.target.classList.contains('fade-in') &&
                !entry.target.classList.contains('fade-in-once')) {
                // For regular fade-in, reset when out of view
                entry.target.classList.remove('opacity-100', 'translate-y-0');
                entry.target.classList.add('opacity-0', 'translate-y-10');
            }
        });
    }, { threshold: 0.1 });

    fadeElements.forEach(el => fadeObserver.observe(el));
}