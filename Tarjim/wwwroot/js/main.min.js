document.addEventListener("DOMContentLoaded", function () {
    const fadeInElements = document.querySelectorAll(".fade-in");

    const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add("opacity-100", "translate-y-0");
                entry.target.classList.remove("opacity-0", "translate-y-10");
            } else {
                entry.target.classList.remove("opacity-100", "translate-y-0");
                entry.target.classList.add("opacity-0", "translate-y-10");
            }
        });
    }, { threshold: 0.2 });

    fadeInElements.forEach(el => observer.observe(el));
});
document.addEventListener("DOMContentLoaded", function () {
    const statisticsSection = document.querySelector(".fade-in-once");
    const counters = document.querySelectorAll(".counter");

    const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
               
                statisticsSection.classList.add("opacity-100", "translate-y-0");
                statisticsSection.classList.remove("opacity-0", "translate-y-10");

              
                counters.forEach(counter => {
                    const target = parseInt(counter.dataset.target);
                    const suffix = counter.dataset.suffix || "";
                    let count = 0;
                    const duration = 1500;
                    const stepTime = Math.max(Math.floor(duration / target), 20);

                    clearInterval(counter._interval); 
                    counter.textContent = "0";

                    counter._interval = setInterval(() => {
                        count++;
                        if (count >= target) {
                            count = target;
                            clearInterval(counter._interval);
                        }
                        counter.textContent = count + suffix;
                    }, stepTime);
                });
            } else {
             
                statisticsSection.classList.remove("opacity-100", "translate-y-0");
                statisticsSection.classList.add("opacity-0", "translate-y-10");
            }
        });
    }, { threshold: 0.5 });

    if (statisticsSection) {
        observer.observe(statisticsSection);
    }
});

const fadeInElements = document.querySelectorAll(".fade-in");
const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add("opacity-100", "translate-y-0");
            entry.target.classList.remove("opacity-0", "translate-y-10");
        } else {
            entry.target.classList.remove("opacity-100", "translate-y-0");
            entry.target.classList.add("opacity-0", "translate-y-10");
        }
    });
}, { threshold: 0.2 });

fadeInElements.forEach(el => observer.observe(el));

document.addEventListener("DOMContentLoaded", function () {
    const steps = document.querySelectorAll(".timeline-step");
    const progress = document.getElementById("list-progress-inner");

    function updateActiveStep() {
        let activeFound = false;

        steps.forEach((step, index) => {
            const rect = step.getBoundingClientRect();
            if (rect.top <= window.innerHeight / 2 && rect.bottom >= window.innerHeight / 2 && !activeFound) {
                step.classList.add("active");
                activeFound = true;

                // Update progress bar height
                const progressHeight = ((index + 1) / steps.length) * 100;
                progress.style.height = `${progressHeight}%`;
            } else {
                step.classList.remove("active");
            }
        });
    }

    window.addEventListener("scroll", updateActiveStep);
    updateActiveStep();
});

  //  const items = document.querySelectorAll("#vertical-scrollable-timeline li");
  //  const progress = document.querySelector(".list-progress .inner");

  //const activateTimeline = () => {
  //      let winTop = window.scrollY;

  //  items.forEach((item, index) => {
  //    if (item.offsetTop < winTop + 300) {
  //      item.classList.add("active");
  //  progress.style.height = `${index * 130 + 130}px`; // 130 = approx. padding per step
  //    }
  //  });
//};
const navbar = document.getElementById('mainNavbar');
const toggleBtn = document.getElementById('mobileMenuToggle');
const mobileMenu = document.getElementById('mobileMenu');


toggleBtn.addEventListener('click', () => {
    mobileMenu.classList.toggle('hidden');
});


window.addEventListener('scroll', () => {
    if (window.scrollY > 10) {
        navbar.classList.add('bg-white', 'shadow-md');
        navbar.classList.remove('bg-transparent');
    } else {
        navbar.classList.remove('bg-white', 'shadow-md');
        navbar.classList.add('bg-transparent');
    }
});